@inherits Nancy.ViewEngines.Razor.NancyRazorViewBase<dynamic>
@using CloudPanel;

@{
    Layout = "__master.cshtml";
}

@section HEAD{
    <link href="~/Content/plugins/datatables-1.10.2/media/css/jquery.dataTables.bootstrap.css" rel="stylesheet" />
    <link href="~/Content/plugins/form-parsley-new/parsley.css" rel="stylesheet" />
    <style type="text/css">
        span.tab-space {
            padding-left: 0.5em;
        }
        td.details-control {
	        background: url('@Url.Content("~/Content/img/details_open.png")') no-repeat center center;
	        cursor: pointer;
        }
        tr.shown td.details-control {
	        background: url('@Url.Content("~/Content/img/details_close.png")') no-repeat center center;
        }
    </style>
}

<div id="page-heading">
    <ol class="breadcrumb">
        <li><a href="~/dashboard">Dashboard</a></li>
        <li><a href="~/company/@this.RenderContext.Context.GetCompanyCode()/overview">@this.RenderContext.Context.GetCompanyName()</a></li>
        <li class="active">Users</li>
    </ol>

    <h1>Users</h1>
    <div class="options">
        <div class="btn-toolbar">
            <div class="btn-group hidden-xs">
                <a href="#" class="btn btn-primary dropdown-toggle" data-toggle="dropdown"><i class="fa fa-cloud-upload"></i><span class="hidden-sm"> Import  </span><span class="caret"></span></a>
                <ul class="dropdown-menu">
                    <li><a href="~/company/@this.RenderContext.Context.GetCompanyCode()/users/import/csv">CSV (*.csv)</a></li>
                </ul>
            </div>
            <a href="javascript:;" class="btn btn-primary hidden-xs" data-toggle="modal" data-target="#newModal">Add New</a>
        </div>
    </div>
</div>

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <div class="panel panel-primary">
                <div class="panel-heading">Current Users</div>
                <div class="panel-body collapse in">
                    <table cellpadding="0" cellspacing="0" border="0" class="table table-bordered datatables" id="dataTable">
                        <thead>
                            <tr>
                                <th></th>
                                <th>Display Name</th>
                                <th>Username</th>
                                <th>Department</th>
                                <th>Features</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td></td>
                                <td>Loading...</td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div class="panel-footer"></div>
            </div>
        </div>
    </div>
</div>

<!-- New Modal -->
<form id="newForm" autocomplete="off" data-parsley-validate>
    <div id="newModal" class="modal fade">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                    <h4 class="modal-title">New User</h4>
                </div>
                <div class="modal-body">
                    <div class="form-horizontal">
                        <div class="form-group">
                            <label for="focusedinput" class="col-sm-3 control-label">Display Name</label>
                            <div class="col-sm-9">
                                <input type="text" class="form-control" id="DisplayName" name="DisplayName" data-parsley-required="true">
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="focusedinput" class="col-sm-3 control-label">Department</label>
                            <div class="col-sm-9">
                                <input type="text" class="form-control" id="Department" name="Department">
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="focusedinput" class="col-sm-3 control-label">Username</label>
                            <div class="col-sm-9">
                                <div class="input-group">
                                    <input type="text" class="form-control" id="Username" name="Username" data-parsley-required="true">
                                    <span class="input-group-addon">@@</span>
                                    @CloudPanel.CPHtmlHelpers.GetCompanyDomains(this.RenderContext.Context.GetCompanyCode(), 0, string.Empty)
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="focusedinput" class="col-sm-3 control-label">Password</label>
                            <div class="col-sm-9">
                                <input type="password" class="form-control" id="Password" name="Password" data-parsley-required="true">
                                <input id="GeneratePassword" name="GeneratePassword" type="checkbox" /> Generate Password
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </div>
        </div>
    </div>
</form>

<!-- Reset Password -->
<form id="resetForm" action="" method="post" autocomplete="off" data-parsley-validate>
    <div id="resetModal" class="modal fade">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                    <h4 class="modal-title">Change Password</h4>
                </div>
                <div class="modal-body">
                    <div class="form-horizontal">
                        <div class="form-group">
                            <label for="focusedinput" class="col-sm-3 control-label">New Password</label>
                            <div class="col-sm-9">
                                <input type="password" class="form-control" id="Password" name="Password" data-parsley-required="true">
                                <input id="GeneratePassword" name="GeneratePassword" type="checkbox" /> Generate Password
                                <input id="UserPrincipalName" name="UserPrincipalName" type="hidden" data-parsley-required="true" />
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Reset</button>
                </div>
            </div>
        </div>
    </div>
</form>

<!-- Delete Modal -->
<form id="deleteForm" action="" method="post">
    <input type="hidden" name="_method" value="DELETE" />
    <div id="deleteModal" class="modal fade">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                    <h4 class="modal-title">Delete User</h4>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete this user?</p>
                    <input id="UserPrincipalName" name="UserPrincipalName" type="hidden" />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-danger">Delete</button>
                </div>
            </div>
        </div>
    </div>
</form>

@section JAVASCRIPT{
    <script src="~/Content/plugins/datatables-1.10.2/media/js/jquery.dataTables.min.js"></script>
    <script src="~/Content/plugins/datatables-1.10.2/media/js/dataTables.bootstrap.js"></script>
    <script src="~/Content/plugins/moment/moment-with-locales.js"></script>
    <script src="~/Content/plugins/form-parsley-new/parsley.min.js"></script>
    <script src="~/Content/js/cloudpanel.js"></script>
    <script type="text/javascript">

        // Special thanks: http://www.designchemical.com/blog/index.php/jquery/random-password-generator-using-jquery/
        $.extend({
            password: function (length, special) {
                var iteration = 0;
                var password = "";
                var randomNumber;
                if (special == undefined) {
                    var special = false;
                }
                while (iteration < length) {
                    randomNumber = (Math.floor((Math.random() * 100)) % 94) + 33;
                    if (!special) {
                        if ((randomNumber >= 33) && (randomNumber <= 47)) { continue; }
                        if ((randomNumber >= 58) && (randomNumber <= 64)) { continue; }
                        if ((randomNumber >= 91) && (randomNumber <= 96)) { continue; }
                        if ((randomNumber >= 123) && (randomNumber <= 126)) { continue; }
                    }
                    iteration++;
                    password += String.fromCharCode(randomNumber);
                }
                return password;
            }
        });

        $(document).ready(function () {

            AddFormHandlers();

            var userTable = $("#dataTable").DataTable({
                "dom": "<'row'<'col-xs-6'l><'col-xs-6'f>r>t<'row'<'col-xs-6'i><'col-xs-6'p>>",
                "autoWidth": false,
                "language": {
                    "lengthMenu": "_MENU_ records per page",
                    "search": ""
                },
                "order": [[1, 'asc']],
                "serverSide": true,
                "processing": true,
                "ajax": {
                    type: 'GET',
                    dataType: 'json',
                    error: function (xhr) {
                        ShowError(xhr.responseJSON.error);
                    },
                },
                "columns": [
                    { "data": "userPrincipalName", "class": "details-control", "orderable": false, "defaultContent": "", "render": function () { return "" } },
                    { "data": "displayName" },
                    { "data": "userPrincipalName" },
                    { "data": "department" },
                    { "data": "userGuid", "orderable": false, "className": "text-center", "render": function (data, type, full, meta) { return GetUserFeatures(full["isEnabled"], full["isCompanyAdmin"], full["isResellerAdmin"], (full["mailboxPlan"] > 0)); } },
                    {
                        "data": "userPrincipalName", "orderable": false, "className": "text-right", "render": function (data, type, full, meta)
                        {
                            return '<div class="btn-group"> \
                                            <button type="button" class="btn btn-primary btn-xs dropdown-toggle" data-toggle="dropdown"> \
                                                Modify <span class="caret"></span> \
                                            </button> \
                                            <ul class="dropdown-menu" role="menu"> \
                                                <li><a href="@Url.Content("~/company/" + this.RenderContext.Context.GetCompanyCode() + "/users/")' + data + '">Edit</a></li> \
                                                <li><a href="javascript:;" onclick="DeleteUser(\''+ data + '\');">Delete</a></li> \
                                                <li class="divider"></li> \
                                                <li><a href="javascript:;" onclick="ShowReset(\''+ data + '\');">Reset Password</a></li> \
                                            </ul> \
                                    </div>';
                        }
                    },
                ],
                "createdRow": function (row, data, index) {
                    $(row).find(".tooltip-ex").tooltip();
                }
            });

            $('#dataTable tbody').on('click', 'td.details-control', function () {
                var tr = $(this).closest('tr');
                var row = userTable.row(tr);

                if (row.child.isShown()) {
                    row.child.hide();
                    tr.removeClass('shown');
                }
                else {
                    row.child(FormatUsersChildTable(row.data())).show();
                    tr.addClass('shown');
                }
            });

            $("input:checkbox[name=GeneratePassword]").change(function () {
                var field = $(this).parent().find("#Password");
                if (this.checked) {
                    field.attr("type", "input");
                    field.val($.password(8, false));
                } else {
                    field.attr("type", "password");
                    field.val("");
                }
            });
        });

        //
        // Prompts the user to ask if they want to delete or not
        //
        function DeleteUser(userPrincipalName) {
            swal({
                title: "Delete " + userPrincipalName + "?",
                text: "This action is not reversable and all data for this user will be deleted permanently",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Yes",
                cancelButtonText: "No",
                closeOnConfirm: false,
                closeOnCancel: true
            },
            function (isconfirm) {
                if (isconfirm) {
                    $.ajax({
                        type: "DELETE",
                        dataType: "json",
                        data: { UserPrincipalName: userPrincipalName },
                    }).done(function () {
                        ReloadTable("dataTable");
                        ShowAlert("Deleted!", "User was successfully deleted", "success");
                    }).fail(function (returnData) {
                        ShowError(returnData.responseJSON.error);
                    });
                }
            });
        }

        //
        // Shows the reset modal which allows the user to put in a password and reset 
        //
        function ShowReset(upn) {
            $("#resetModal #UserPrincipalName").val(upn);
            $("#resetModal").modal("show");
        }

        //
        // Modifies the default form events and overrides them
        //
        function AddFormHandlers() {
            $("#newForm").submit(function (event) {
                event.preventDefault();
                var data = $("#newForm").serialize();

                $.blockUI();
                $.post("", data).done(function (returnData) {
                    $("#newModal").modal("hide");
                    ReloadTable("dataTable");
                    ShowSuccess(returnData.success);
                }).fail(function (returnData) {
                    ShowError(returnData.responseJSON.error);
                }).always(function () {
                    $.unblockUI();
                });
            });

            $("#resetForm").submit(function (event) {
                event.preventDefault();
                var data = $("#resetForm").serialize();
                var url = "@Url.Content("~/company/"+this.RenderContext.Context.GetCompanyCode()+"/users/")" + $("#resetForm #userPrincipalName").val() + "/resetpassword";

                $.blockUI();
                $.post(url, data).done(function (returnData) {
                    $("#resetModal").modal("hide");
                    ShowSuccess(returnData.success);
                }).fail(function (returnData) {
                    ShowError(returnData.responseJSON.error);
                }).always(function () {
                    $.unblockUI();
                });
            });
        }

        //
        // Formats the child table under each user
        //
        function FormatUsersChildTable(d) {
            var returnData = '<table class="table table-striped table-condensed table-bordered">' +
                                      '<tr><td align="right" width="200px">GUID:</td><td>' + d.userGuid + '</td></tr>' +
                                      '<tr><td align="right">SamAccountName:</td><td>' + d.samAccountName + '</td></tr>' +
                                      '<tr><td align="right">Created:</td><td>' + moment(d.created).format('LLLL') + '</td></tr>' +
                                      '</table>';

            if (d.mailboxPlan > 0) {
                returnData += '<table class="table table-striped table-condensed table-bordered">' +
                              '<tr><td align="right" width="200px">Plan:</td><td>' + d.mailboxPlanName + '</td></tr>' +
                              '<tr><td align="right">Features:</td><td>' + GetMailboxFeatures(d) + '</td></tr>' +
                              '<tr><td align="right">Size:</td><td>' + GetMailboxSizeProgressBar(d.userPrincipalName, d.mailboxSize, d.mailboxPlanSize + d.additionalMB) + '</td></tr>' +
                              '<tr><td align="right">Deleted Size:</td><td>' + bytesToSize(d.mailboxDeletedSize) + '</td></tr>' +
                              '<tr><td align="right">Item Count:</td><td>' + d.mailboxItemCount + '</td></tr>' +
                              '<tr><td align="right">Deleted Item Count:</td><td>' + d.mailboxDeletedItemCount + '</td></tr>' +
                              '<tr><td align="right">Info Retrieved:</td><td>' + d.mailboxInfoRetrieved + '</td></tr>' +
                              '</table>';
            }

            return returnData + '</table>';
        }

        //
        // Formats the list of mailbox features the user has
        //
        function GetMailboxFeatures(d) {
            var returnData = "";

            if (d.mailboxPlanPOP3) { returnData += '<span class="label label-default">POP3</span>' }
            if (d.mailboxPlanIMAP) { returnData += '<span class="label label-primary">IMAP</span>' }
            if (d.mailboxPlanOWA) { returnData += '<span class="label label-success">OWA</span>' }
            if (d.mailboxPlanMAPI) { returnData += '<span class="label label-info">MAPI</span>' }
            if (d.mailboxPlanAS) { returnData += '<span class="label label-warning">ActiveSync</span>' }

            return returnData;
        }

        //
        // Gets a list of features the user has and displays them in the table
        //
        function GetUserFeatures(isEnabled, isCompanyAdmin, isResellerAdmin, hasMailbox) {
            var html = [];

            if (!isEnabled)
                html.push('<span class="badge badge-danger tooltip-ex" data-toggle="tooltip" data-original-title="User is Disabled"><i class="fa fa-frown-o"></i></span><span class="tab-space"></span>');

            if (isCompanyAdmin)
                html.push('<span class="badge badge-success tooltip-ex" data-toggle="tooltip" data-original-title="Company Administrator"><i class="fa fa-gear"></i></span><span class="tab-space"></span>');

            if (isResellerAdmin)
                html.push('<span class="badge badge-info tooltip-ex" data-toggle="tooltip" data-original-title="Reseller Administrator"><i class="fa fa-gears"></i></span><span class="tab-space"></span>');

            if (hasMailbox)
                html.push('<span class="badge badge-warning tooltip-ex" data-toggle="tooltip" data-original-title="Has a Mailbox"><i class="fa fa-envelope"></i></span><span class="tab-space"></span>');

            return html.join("");
        }

        //
        // Formats the mailbox size progress bar
        //
        function GetMailboxSizeProgressBar(upn, minInBytes, maxInMB) {
            if (maxInMB == 0)
                return "";
            else {
                var maxInKB = (maxInMB * 1024);

                var minInKB = 0;
                if (minInBytes > 0)
                    minInKB = minInBytes / 1024; // Convert size to KB since we are comparing that to the max which is in KB

                if (minInKB > maxInKB)
                    maxInKB = minInKB;

                var percent = Math.round((minInKB * 100) / maxInKB);
                var title = bytesToSize(minInKB * 1024) + " / " + bytesToSize(maxInKB * 1024);
                return '<div class="">\
                            <div class="clearfix">\
                                <div class="progress-title" style="float: left">'+ title + '</div>\
                                <div class="progress-percentage" style="float: right; position: relative">'+ percent + '% <a href="javascript:GetMailboxSize(\'' + upn + '\');"><i class="fa fa-refresh"></i></div>\
                            </div>\
                            <div class="progress">\
                                <div class="progress-bar progress-bar-info" style="width: '+ percent + '%"></div>\
                            </div>\
                        </div>';
            }
        }
        
        //
        // Queries Exchange for an updated mailbox size for the user
        //
        function GetMailboxSize(upn) {
            $(".panel").block();
            $.getJSON("@Url.Content("~/company/" + this.RenderContext.Context.GetCompanyCode() + "/exchange/mailbox/size/")" + upn, function (data) {
                ReloadTable("dataTable");
            }).fail(function (data) {
                ShowError(data.responseJSON.error);
            }).always(function () {
                $(".panel").unblock();
            });
        }
    </script>
}