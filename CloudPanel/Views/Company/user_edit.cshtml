@inherits Nancy.ViewEngines.Razor.NancyRazorViewBase<dynamic>
@using CloudPanel
@using CloudPanel.Base.Config

@{
    Layout = "__master.cshtml";
    string companyCode = this.RenderContext.Context.Parameters.CompanyCode;
}

@section HEAD{
    <link href="~/Content/plugins/form-parsley-new/parsley.css" rel="stylesheet" />
    <link href="~/Content/plugins/form-tokenfield/bootstrap-tokenfield.css" rel="stylesheet" />
    <link href="~/Content/plugins/form-select2/select2.css" rel="stylesheet" />
    <link href="~/Content/plugins/form-datepicker/css/datepicker3.css" rel="stylesheet" />
    <link href="~/Content/plugins/form-toggle/css/toggles-full.css" rel="stylesheet" />
    <link href="~/Content/js/jqueryui.min.css" rel="stylesheet" />
    <style type="text/css">
        span.tab-space {
            padding-left: 0.5em;
        }

        ul .dropdown-menu {
            left: 0 !important;
        }

        .toggle-on {
            padding-right: 15px;
        }

        .toggle-off {
            padding-right: 8px;
        }
    </style>
}

<div id="page-heading">
    <ol class="breadcrumb">
        <li><a href="~/dashboard">Dashboard</a></li>
        <li><a href="~/company/@companyCode/overview">@this.RenderContext.Context.GetCompanyName()</a></li>
        <li><a href="~/company/@companyCode/users">Users</a></li>
        <li class="active">Edit User</li>
    </ol>

    <h1>Edit User</h1>
</div>

<div class="container">

    <div class="row">
        <div class="col-md-12">
            <div class="panel panel-primary">
                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-6">
                            <!--<img src="" alt="" class="pull-left" style="margin: 0 20px 20px 0">-->
                            <div class="table-responsive">
                                <h3><strong>@Model.DisplayName</strong></h3><table class="table table-condensed">
                                    <tbody>
                                        <tr>
                                            <td>Phone</td>
                                            <td>@Model.TelephoneNumber</td>
                                        </tr>
                                        <tr>
                                            <td>Email</td>
                                            <td><a href="mailto:@Model.Email">@Model.Email</a></td>
                                        </tr>
                                        <tr>
                                            <td>Department</td>
                                            <td>@Model.Department</td>
                                        </tr>
                                        <tr>
                                            <td>Job Title</td>
                                            <td>@Model.JobTitle</td>
                                        </tr>
                                        <tr>
                                            <td>Status</td>
                                            <td>@(Model.IsEnabled == false ? "Disabled" : "Enabled")</td>
                                        </tr>
                                        <tr>
                                            <td>Social</td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(Model.Skype))
                                                { <a href="skype:@Model.Skype?call" class="btn btn-xs"><i class="fa fa-skype"></i></a> }
                                                @if (!string.IsNullOrEmpty(Model.Facebook))
                                                { <a href="@Model.Facebook" class="btn btn-xs"><i class="fa fa-facebook"></i></a> }
                                                @if (!string.IsNullOrEmpty(Model.Twitter))
                                                { <a href="@Model.Twitter" class="btn btn-xs"><i class="fa fa-twitter"></i></a> }
                                                @if (!string.IsNullOrEmpty(Model.Dribbble))
                                                { <a href="@Model.Dribbble" class="btn btn-xs"><i class="fa fa-dribbble"></i></a> }
                                                @if (!string.IsNullOrEmpty(Model.Tumblr))
                                                { <a href="@Model.Tumblr" class="btn btn-xs"><i class="fa fa-tumblr"></i></a> }
                                                @if (!string.IsNullOrEmpty(Model.LinkedIn))
                                                { <a href="@Model.LinkedIn" class="btn btn-xs"><i class="fa fa-linkedin"></i></a> }
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <h3>Notes</h3>
                            <p>
                                @Model.Notes
                            </p>
                        </div>
                    </div>
                    <hr />
                    <div class="row">
                        <div class="col-md-12">
                            <div class="tab-container tab-success">
                                <ul class="nav nav-tabs">
                                    <li class="active"><a href="#user" data-toggle="tab">User</a></li>
                                    @if (Model.ExchEnabled == true)
                                    {
                                        <li class="dropdown">
                                            <a class="dropdown-toggle" data-toggle="dropdown" href="#">Email <span class="caret"></span></a>
                                            <ul class="dropdown-menu">
                                                <li><a href="#mailbox" data-toggle="tab" onclick="javascript:GetMailbox();">Edit</a></li>
                                                <li><a href="#litigationhold" data-toggle="tab" onclick="javascript:GetLitigationHold();">Litigation Hold</a></li>
                                                @if (Settings.ExchangeArchivingEnabled == true)
                                                {
                                                    <li><a href="#archiving" data-toggle="tab" onclick="javascript:GetArchiving();">Archiving</a></li>
                                                }
                                            </ul>
                                        </li>
                                    }
                                </ul>
                                <div class="tab-content">
                                    <!-- USER SECTION -->
                                    @Html.Partial("Company/User/_user.cshtml", Model)

                                    <!-- MAILBOX SECTION -->
                                    @Html.Partial("Company/User/_mailbox.cshtml", Model)

                                    <!-- LITIGATION HOLD SECTION -->
                                    @Html.Partial("Company/User/_litigationhold.cshtml")

                                    <!-- ARCHIVING SECTION -->
                                    @Html.Partial("Company/User/_archiving.cshtml", Model)
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
                <div class="panel-footer">
                    <div class="row">
                        <div class="btn-toolbar text-right">
                            <button id="submit" class="btn-primary btn" type="button" onclick="javascript:Submit();">Save</button>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>

@section JAVASCRIPT{
    <script src="~/Content/plugins/form-parsley-new/parsley.min.js"></script>
    <script src="~/Content/plugins/form-tokenfield/bootstrap-tokenfield.min.js"></script>
    <script src="~/Content/plugins/form-select2/select2.min.js"></script>
    <script src="~/Content/plugins/form-toggle/toggles.js"></script>
    <script src="~/Content/plugins/form-datepicker/js/bootstrap-datepicker.js"></script>
    <script src="~/Content/plugins/form-ckeditor/ckeditor.js"></script>
    <script src="~/Content/plugins/knockout/knockout-3.2.0.js"></script>
    <script src="~/Content/knockout/CitrixModel.js"></script>
    <script type="text/javascript">
        var mailboxUpdated = false;
        var litigationHoldUpdated = false;
        var archivingUpdated = false;

        $(document).ready(function () {

            // Checkboxes to set the appropriate values
            $("input[type=checkbox]").click(function () {
                if ($(this).is(':checked')) {
                    $(this).val("true");
                } else {
                    $(this).val("false");
                }
            });

            // Date picker for litigation hold
            $('#LitigationHoldDuration').datepicker({ startDate: "+1d" });

            // Select2 for full access, send-as, and send on behalf
            $(".populate").select2({
                width: 'resolve'
            });

            // Editor for the user's notes field
            CKEDITOR.replace('Notes');

            // Toggle for enabling / disabling mailboxes
            MailboxToggle();

            // Slider for mailbox plans
            SetSlider(@Model.AdditionalMB);
            $("#MailboxPlan").change(function () {
                SetSlider(0);
            });

            // Tokenfield for email aliases
            $('#EmailAliases')
              .on('beforeCreateToken', function (e) {
                  var token = e.token.value.split('|');
                  e.token.value = token[1] || token[0];
                  e.token.label = token[1] ? token[0] + ' (' + token[1] + ')' : token[0];
              })
              .on('afterCreateToken', function (e) {
                  var re = /\S+@@\S+\.\S+/
                  var valid = re.test(e.token.value);
                  if (!valid) {
                      $(e.relatedTarget).addClass('invalid');
                  }
              })
              .on('beforeEditToken', function (e) {
                  if (e.token.label !== e.token.value) {
                      var label = e.token.label.split(' (');
                      e.token.value = label[0] + '|' + e.token.value;
                  }
              })
              .tokenfield();
        });

        // Slider for the mailbox plan. Will not show if value is zero
        function SetSlider(value) {
            var select = $("#MailboxPlan option:selected");
            var min = $(select).data("min");
            var max = $(select).data("max");

            if (value == 0)
                value = min;
            else
                value = value + min;

            if (min > 0) {
                $(".slidergroup").show();
                $("#MailboxPlanSlider").slider({
                    value: value,
                    min: min,
                    max: max,
                    step: 256,
                    slide: function (event, ui) {
                        $("#MailboxSize").val(ui.value);
                        $("#SizeInMB").val(ui.value);
                    }
                });
                $("#MailboxSize").val(value);
                $("#SizeInMB").val(value);
            } else {
                $(".slidergroup").hide();
            }
        }

        // Submit our chain requests
        function Submit() {
            $.blockUI();
            SubmitUser().then(SubmitMailbox)
                        .then(SubmitLitigation)
                        .then(SubmitArchive)
                        .fail(function (data) {
                            ShowError(data);
                        })
                        .always(function () {
                            $.unblockUI();
                        })
                        .done(function () {
                            window.location.href = "@Url.Content("~/company/" + Model.CompanyCode +"/users")";
                        });
        }

        // Submits the new user
        function SubmitUser() {
            $("#WaitMessage #message").text("Updating user settings");
            var userForm = $("#userForm").serialize();
            return $.ajax({
                type: "PUT",
                data: userForm
            });
        }

</script>
}