@inherits Nancy.ViewEngines.Razor.NancyRazorViewBase<dynamic>
@using CloudPanel.Base.Database.Models

@{
    Layout = "__master.cshtml";
}

@section HEAD{
    <link href="~/Content/plugins/datatables-1.10.2/media/css/jquery.dataTables.bootstrap.css" rel="stylesheet" />
    <link href="~/Content/plugins/form-parsley-new/parsley.css" rel="stylesheet" />
    <style type="text/css">
            span.tab-space {
                padding-left: 0.5em;
            }
            td.details-control {
	            background: url('@Url.Content("~/Content/img/details_open.png")') no-repeat center center;
	            cursor: pointer;
            }
            tr.shown td.details-control {
	            background: url('@Url.Content("~/Content/img/details_close.png")') no-repeat center center;
            }
    </style>
}

<div id="page-heading">
    <ol class="breadcrumb">
        <li><a href="~/dashboard">Dashboard</a></li>
        <li><a href="~/plans/citrix">Citrix Plans</a></li>
        <li class="active">Desktop Groups</li>
    </ol>

    <h1>@Model.Name</h1>
</div>

<div class="container">
    <div class="row">
        <div class="col-md-8">
            <dl class="dl-horizontal">
                <dt>Name</dt>
                <dd>@Model.Name</dd>
                <dt>Published Name</dt>
                <dd>@Model.PublishedName</dd>
                <dt>Description</dt>
                <dd>@Model.Description</dd>
                <dt>Last Retrieved</dt>
                <dd>@Model.LastRetrieved.ToString()</dd>
            </dl>
        </div>
        <div class="col-md-2">

        </div>
    </div>
    <div class="row">
        <div class="panel panel-primary">
            <div class="panel-heading">
                <h4><i class="fa fa-desktop"></i> Desktops</h4>
            </div>
            <div class="panel-body">
                <table id="desktopsTable" cellpadding="0" cellspacing="0" border="0" class="table table-bordered table-hover datatables">
                    <thead>
                        <tr>
                            <th></th>
                            <th>Name</th>
                            <th>DNS Name</th>
                            <th>IP Address</th>
                            <th>In Maintenance Mode?</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var desktop in Model.Desktops)
                        {
                            <tr data-id="@CloudPanel.Base.DynamicHandlers.GetPropValue(desktop, "Uid")">
                                <td class="details-control"></td>
                                <td>@CloudPanel.Base.DynamicHandlers.GetPropValue(desktop, "MachineName")</td>
                                <td>@CloudPanel.Base.DynamicHandlers.GetPropValue(desktop, "DNSName")</td>
                                <td>@CloudPanel.Base.DynamicHandlers.GetPropValue(desktop, "IPAddress")</td>
                                <td>@(CloudPanel.Base.DynamicHandlers.GetPropValue(desktop, "InMaintenanceMode") == true ? "<span class='label label-warning'>Maintenance Mode</span>" : "")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section JAVASCRIPT{
    <script src="~/Content/plugins/datatables-1.10.2/media/js/jquery.dataTables.min.js"></script>
    <script src="~/Content/plugins/datatables-1.10.2/media/js/dataTables.bootstrap.js"></script>
    <script src="~/Content/plugins/moment/moment-with-locales.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {

            var desktopsTable = $("#desktopsTable").DataTable({ "ordering": false, "searching": false, "lengthChange": false, "paging": false });

            $('#desktopsTable tbody').on('click', 'td.details-control', function () {
                var tr = $(this).closest('tr');
                var row = desktopsTable.row(tr);
                var uid = $(tr).data("id");

                if (row.child.isShown()) {
                    row.child.hide();
                    tr.removeClass('shown');
                }
                else {
                    var table = '<table cellpadding="0" cellspacing="0" border="0" class="table table-striped datatables" id="' + uid + '">\
                                 <thead>\
                                    <tr>\
                                        <th align="center" width="10px"><input id="SelectAll" type="checkbox" onclick="javascript: CheckboxColDesktops('+ uid + ', this);" /></th>\
                                        <th>Login</th>\
                                        <th>Alt Login</th>\
                                        <th>Session State</th>\
                                        <th>Start Time</th>\
                                    </tr>\
                                 </thead>\
                                 <tbody>\
                                 </tbody>\
                                 </table>';

                    row.child(table).show();
                    tr.addClass("shown");

                    var table = $("#" + uid).DataTable({ "dom": "<'row'<'col-xs-6 toolbar'l><'col-xs-6'f>r>t<'row'<'col-xs-6'i><'col-xs-6'p>>", "ordering": false, "paging": false });
                    $("div.toolbar").html('<div class="btn-group">\
                                              <a href="javascript:LogOff('+ uid + ');" class="btn btn-primary btn-sm">Send Message</a>\
                                              <a href="#" class="btn btn-primary btn-sm">Log Off</a>\
                                           </div>');

                    $("#" + uid).block();
                    $.getJSON(window.location.href + "/" + uid + "/sessions", function (data) {
                        $.each(data.data, function (k, v) {
                            var row = table.row.add(['<input name="CheckedUsers" type="checkbox" value="' + v.sessionKey + '"/>', v.userUPN, v.untrustedUserName, v.sessionState, moment(v.startTime).format('lll')]).draw().node();
                            $(row).closest('tr').find('td:first').addClass("selector").addClass("text-center");
                        })
                    })
                    .fail(function (data) {
                        ShowError(data);
                    })
                    .always(function () {
                        $("#" + uid).unblock();
                    });
                }
            });
        });

        function CheckboxColDesktops(uid,source) {
            var table = $('#'+uid).DataTable();
            var cells = table
                        .cells(".selector")
                        .nodes();

            $(cells).find(":checkbox").prop("checked", $(source).is(":checked"));
        }

        function LogOff(tableId) {
            var id = "#" + tableId + " input[name=CheckedUsers]";

            var keys = [];
            $(id).each(function () {
                if ($(this).is(":checked")) {
                    keys.push($(this).val());
                }
            });

            swal({
                title: "Are you sure?",
                text: "Are you sure you want to log off the users?",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Yes, delete it!",
                closeOnConfirm: false
            }, function () {

                swal("Deleted!", "Your imaginary file has been deleted.", "success");
            });
        }
    </script>
}